// Copyright 2022 Google LLC
//
// Use of this source code is governed by an MIT-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.

syntax = "proto3";

package ocpdiag.hwinterface;

// Assembly of items that the various backends
// use to identify hardware components.
message Identifier {
  // Gsys and Machine Manager use devpaths to identify components.
  // Every component of the system has a single unique devpath.
  string devpath = 1;
  // Redfish uses OData IDs to identify components.
  string odata_id = 2;
  string name = 3;
  string arena = 4;
  // For sensors, this is <sensor_type>_<sensor_unit> because some sensors
  // can only be distinguished by units.
  string type = 5;
  // Unique string id to identify a component in the machine.
  // This is usually auto-generated by string processing from the fields above.
  // The fields will be concatenated by "%" if there is a need to manually
  // generate this field.
  string id = 6;
}

// Identifier filter.
message Filter {
  enum Operator {
    NOT_SET = 0;
    OR = 1;   // Match ANY field in ocpdiag.hwinterface.Identifier
    AND = 2;  // Match ALL fields in ocpdiag.hwinterface.Identifier
  }
  ocpdiag.hwinterface.Identifier id_regex = 1;
  Operator op = 2;
}
